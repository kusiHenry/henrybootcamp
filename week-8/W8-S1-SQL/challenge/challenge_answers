Challenge 1 
SELECT 
    c.customer_name,
    SUM(oi.item_qty * oi.item_price) AS total_order_value
FROM 
    customers c
JOIN 
    orders o ON c.customer_id = o.customer_id
JOIN 
    order_items oi ON o.order_id = oi.order_id
GROUP BY 
    c.customer_name
ORDER BY 
    total_order_value DESC;


Challenge 2
SELECT 
    c.customer_name,
    COUNT(DISTINCT o.order_id) AS order_count
FROM 
    customers c
JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    c.customer_name
ORDER BY 
    order_count DESC;


Challenge 3
SELECT 
    c.customer_name,
    AVG(order_total) AS avg_order_value
FROM (
    SELECT 
        o.order_id,
        o.customer_id,
        SUM(oi.item_qty * oi.item_price) AS order_total
    FROM 
        orders o
    JOIN 
        order_items oi ON o.order_id = oi.order_id
    GROUP BY 
        o.order_id, o.customer_id
) AS order_totals
JOIN 
    customers c ON c.customer_id = order_totals.customer_id
GROUP BY 
    c.customer_name
ORDER BY 
    avg_order_value DESC;



Challenge 4
SELECT 
    order_id,
    SUM(item_qty) AS total_item_qty
FROM 
    order_items
GROUP BY 
    order_id
ORDER BY 
    total_item_qty DESC;


Challenge 5
SELECT 
    item_name,
    SUM(item_qty) AS total_qty
FROM 
    order_items
GROUP BY 
    item_name
ORDER BY 
    total_qty DESC
LIMIT 1;



Bonus Challenge 
1. Customers with more than $1000
SELECT 
    c.customer_name,
    SUM(oi.item_qty * oi.item_price) AS total_order_value
FROM 
    customers c
JOIN 
    orders o ON c.customer_id = o.customer_id
JOIN 
    order_items oi ON o.order_id = oi.order_id
GROUP BY 
    c.customer_name
HAVING 
    total_order_value > 1000
ORDER BY 
    total_order_value DESC;


2. Items ordered more than 10 times 
SELECT 
    item_name,
    SUM(item_qty) AS total_qty
FROM 
    order_items
GROUP BY 
    item_name
HAVING 
    total_qty > 10
ORDER BY 
    total_qty DESC;
